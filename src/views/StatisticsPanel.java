/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;


import com.xeiam.xchart.BitmapEncoder;
import com.xeiam.xchart.BitmapEncoder.BitmapFormat;
import com.xeiam.xchart.Chart;
import com.xeiam.xchart.ChartBuilder;
import com.xeiam.xchart.QuickChart;
import com.xeiam.xchart.Series;
import com.xeiam.xchart.StyleManager.ChartType;
import com.xeiam.xchart.StyleManager.LegendPosition;
import com.xeiam.xchart.SwingWrapper;
import com.xeiam.xchart.XChartPanel;
import java.awt.Color;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import models.Consultation;
import models.dao.DAOFactory;
/**
 *
 * @author zianwar
 */
public class StatisticsPanel extends javax.swing.JPanel {
    
    Chart chart = new ChartBuilder().chartType(ChartType.Bar).width(800).height(300).title("Statistiques").xAxisTitle("Les jours").yAxisTitle("Nombre").build();
    
    /**
     * Creates new form StatisticsPanel
     */
    public StatisticsPanel() {
        initComponents();
        
        ButtonGroup group = new ButtonGroup();
        group.add(byDayRadioButton);
        group.add(ByWeekRadioButton);
        
        group.setSelected(byDayRadioButton.getModel(), true);
        
        jPanel3.setVisible(true);
        jPanel2.setVisible(false);
        deDatePicker.setLocale(Locale.FRENCH);
        deDatePicker.setEditable(true);
        aDatePicker.setLocale(Locale.FRENCH);
        aDatePicker.setEditable(true);
        exportButton.setVisible(false);
        long deTmp;
        long aTmp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        deDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel3 = new javax.swing.JLabel();
        aDatePicker = new org.jdesktop.swingx.JXDatePicker();
        displayButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        ByWeekRadioButton = new javax.swing.JRadioButton();
        byDayRadioButton = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(241, 241, 241));

        jPanel3.setBackground(new java.awt.Color(241, 241, 241));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("De:");

        jLabel3.setText("Ã€:");

        displayButton.setText("Afficher");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        exportButton.setText("Exporter");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        ByWeekRadioButton.setText("Par semaine");
        ByWeekRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ByWeekRadioButtonActionPerformed(evt);
            }
        });

        byDayRadioButton.setText("Par jour");
        byDayRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byDayRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(16, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(deDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(byDayRadioButton)
                        .addGap(32, 32, 32)
                        .addComponent(ByWeekRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel3)
                .addGap(28, 28, 28)
                .addComponent(aDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(displayButton)
                .addGap(18, 18, 18)
                .addComponent(exportButton)
                .addGap(45, 45, 45))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ByWeekRadioButton)
                    .addComponent(byDayRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(aDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(displayButton)
                        .addComponent(exportButton)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(241, 241, 241));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));
        jPanel2.add(jLabel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(834, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        displayChart();
    }//GEN-LAST:event_displayButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        try {
            showSaveAsDialog();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    private void ByWeekRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ByWeekRadioButtonActionPerformed
        displayChart();
    }//GEN-LAST:event_ByWeekRadioButtonActionPerformed

    private void byDayRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byDayRadioButtonActionPerformed
        displayChart();
    }//GEN-LAST:event_byDayRadioButtonActionPerformed

    private void showSaveAsDialog() {

        JFileChooser fileChooser = new JFileChooser();

        FileNameExtensionFilter pngFileFilter = new FileNameExtensionFilter("PNG File","png");
        fileChooser.setAcceptAllFileFilterUsed(false);

        fileChooser.setFileFilter(pngFileFilter);

        if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {

            if (fileChooser.getSelectedFile() != null) {
                File theFileToSave = fileChooser.getSelectedFile();
                try {
                    BitmapEncoder.saveBitmap(chart, theFileToSave.getCanonicalPath().toString(), BitmapFormat.PNG);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

        }
    }

    public void displayChart() {
        
        Collection<String> xData = new ArrayList<String>();
        Collection<Double> yData = new ArrayList<Double>();
        Collection<Double> yData2 = new ArrayList<Double>();
        
        long deTmp = 0, aTmp = 0;
        chart = new ChartBuilder().chartType(ChartType.Bar).width(800).height(300).title("Statistiques").xAxisTitle("Les jours").yAxisTitle("Nombre").build();
        try{
            deTmp = deDatePicker.getDate().getTime();
            aTmp = aDatePicker.getDate().getTime();
        } catch(Exception e) {
            JOptionPane.showMessageDialog(this, "Veuillez sÃ©lectionner les dates", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        

        if(deTmp != 0 && aTmp != 0) {
        
            jPanel2.setVisible(true);   
            exportButton.setVisible(true);
            //Loop from deDatePicked to aDatePicked incrementing by one day
            if(deTmp > aTmp) {
                JOptionPane.showMessageDialog(this, "Veuillez entrer des dates valides", "Erreur", JOptionPane.ERROR_MESSAGE);        
            } else {
                if(byDayRadioButton.isSelected()) {
                    for(long current = deTmp ; current <= aTmp ; current += 24*3600*1000) {
                        DateFormat df = new SimpleDateFormat("dd/MM");
                        Calendar cal = Calendar.getInstance();
                        cal.setTimeInMillis(current);
                        xData.add(df.format(cal.getTime()));
                        Vector<Consultation> con = DAOFactory.getConsultationDAO().byDateAndStatus(new Timestamp(current), "finished");
                        Vector<Consultation> con2 = DAOFactory.getConsultationDAO().byDateAndStatus(new Timestamp(current), "pending");
                        yData.add((double)con.size());
                        yData2.add((double)con2.size());
                    }
                } else if(ByWeekRadioButton.isSelected()) {
                    double cons, reservs;
                    for(long current = deTmp ; current <= aTmp ; current += 24*3600*1000*7) {
                        cons = 0;
                        reservs = 0;
                        for(long cur = current; cur <= current+24*3600*1000*7; cur += 24*3600*1000) {

                            Vector<Consultation> con = DAOFactory.getConsultationDAO().byDateAndStatus(new Timestamp(cur), "finished");
                            Vector<Consultation> con2 = DAOFactory.getConsultationDAO().byDateAndStatus(new Timestamp(cur), "pending");
                            cons += con.size();
                            reservs += con2.size();
                        }
                        DateFormat df = new SimpleDateFormat("dd/MM");
                        Calendar cal = Calendar.getInstance();
                        cal.setTimeInMillis(current);
                        xData.add(df.format(cal.getTime()));
                        yData.add(cons);
                        yData2.add(reservs);
                    }
                }

                Series series = chart.addSeries("Consultations", xData, yData);
                Series series2 = chart.addSeries("RÃ©servations", xData, yData2);
                // Customize Chart
                chart.getStyleManager().setLegendPosition(LegendPosition.InsideNW);
                chart.getStyleManager().setChartBackgroundColor(new Color(241,241,241));
                JPanel pnlChart = new XChartPanel(chart);
                jPanel2.removeAll(); 
                jPanel2.add(pnlChart);
                jPanel2.validate(); 
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ByWeekRadioButton;
    private org.jdesktop.swingx.JXDatePicker aDatePicker;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JRadioButton byDayRadioButton;
    private org.jdesktop.swingx.JXDatePicker deDatePicker;
    private javax.swing.JButton displayButton;
    private javax.swing.JButton exportButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
