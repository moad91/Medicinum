/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.SQLClientInfoException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import models.Consultation;
import models.dao.DAOFactory;
import models.Patient;
import models.User;

/**
 *
 * @author zianwar
 */
public class PatientPanel extends javax.swing.JPanel implements ListSelectionListener{

    
    private Patient patient;
    private Patient selectedPatient;
    
    
    /**
     * Creates new form PatientPanel
     */
    public PatientPanel() {
        initComponents();
         if(!User.getConnectedUser().getRole().equals("docteur"))
        {
            
        }
        refreshTable(DAOFactory.getPatientDAO().all());
        
        ListSelectionModel selectionModel = patientsTable.getSelectionModel();
        selectionModel.addListSelectionListener(this);
        selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        
        searchButton.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                patientsTable.repaint();;
                refreshTable(DAOFactory.getPatientDAO().like(searchTextField.getText()));
            }
            
        });
        
        searchTextField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if(e.getKeyCode() == KeyEvent.VK_ENTER ) {
                    patientsTable.repaint();
                    refreshTable(DAOFactory.getPatientDAO().like(searchTextField.getText()));
                }
            } 
        });
        
        
        profilePanel.setVisible(false);
        createUpdatePatientPanel.setVisible(false);
    }

    public void refreshTable(Vector<Patient> patients) {
        try {
            patientsTable.setModel(TableModelBuilder.buildPatientTableModel(patients));
        } catch (Exception ex) {
            patientsTable.repaint();
        }
    }
    
    
    public void loadProfilePanel(Patient currentPatient) {
        this.patient = currentPatient;
        
        patientName.setText(currentPatient.getLastName() + " " + currentPatient.getName());
        patientSex.setText(currentPatient.getSexe().toUpperCase());
        patientAge.setText(Integer.toString(Utils.getAge(currentPatient.getBirthDate())));
        visitsTable.setModel(TableModelBuilder.buildPatientConsultationTableModel(DAOFactory.getConsultationDAO().all(currentPatient.getPatientId())));
        infoTable.setModel(TableModelBuilder.buildPatientInfosTableModel(DAOFactory.getConsultationDAO().all(currentPatient.getPatientId())));
        diagnosticsListe.setModel(TableModelBuilder.buildPatientDiagnosticsTableModel(DAOFactory.getConsultationDAO().all(currentPatient.getPatientId())));
        allergiesListe.setModel(TableModelBuilder.buildPatientAllergiesTableModel(DAOFactory.getConsultationDAO().all(currentPatient.getPatientId())));
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        patientsListPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientsTable = new javax.swing.JTable();
        patientInfoPanel = new javax.swing.JPanel();
        patientNumberLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        displayProfileButton = new javax.swing.JButton();
        modifyPatientButton = new javax.swing.JButton();
        deletePatientButton = new javax.swing.JButton();
        lastNameLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        cinLabel = new javax.swing.JLabel();
        birthDateLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        addPatientButton = new javax.swing.JButton();
        profilePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        patientName = new javax.swing.JLabel();
        patientSex = new javax.swing.JLabel();
        patientAge = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        visitsTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        infoTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        diagnosticsListe = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        allergiesListe = new javax.swing.JTable();
        addRemindButton = new javax.swing.JButton();
        createUpdatePatientPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lastNameText = new javax.swing.JTextField();
        cinText = new javax.swing.JTextField();
        FirstNameText = new javax.swing.JTextField();
        monthChoice = new javax.swing.JComboBox();
        dayChoice = new javax.swing.JComboBox();
        phoneTextField = new javax.swing.JTextField();
        cityTextField = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        addressTextFiled = new javax.swing.JTextArea();
        sexChoice = new javax.swing.JComboBox();
        yearTextField = new javax.swing.JTextField();
        addOrUpdateButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setPreferredSize(new java.awt.Dimension(889, 550));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientsListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liste des Patients", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N

        patientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "N˚ Patient", "Nom", "Prénom"
            }
        ));
        jScrollPane1.setViewportView(patientsTable);

        javax.swing.GroupLayout patientsListPanelLayout = new javax.swing.GroupLayout(patientsListPanel);
        patientsListPanel.setLayout(patientsListPanelLayout);
        patientsListPanelLayout.setHorizontalGroup(
            patientsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientsListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                .addContainerGap())
        );
        patientsListPanelLayout.setVerticalGroup(
            patientsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientsListPanelLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainPanel.add(patientsListPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 790, 210));

        patientInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        patientInfoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientNumberLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        patientNumberLabel.setText("Patient N˚");
        patientInfoPanel.add(patientNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        jLabel2.setText("Nom");
        patientInfoPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        jLabel3.setText("Age");
        patientInfoPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel4.setText("Prénom");
        patientInfoPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel5.setText("Date de naissance");
        patientInfoPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, -1, -1));

        jLabel6.setText("Sexe");
        patientInfoPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel7.setText("CIN");
        patientInfoPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, -1));

        jLabel8.setText("Adresse");
        patientInfoPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, -1, -1));

        jLabel9.setText("Ville");
        patientInfoPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, -1, -1));

        displayProfileButton.setText("Afficher le profil");
        displayProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayProfileButtonActionPerformed(evt);
            }
        });
        patientInfoPanel.add(displayProfileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, -1, -1));

        modifyPatientButton.setText("Modifier");
        modifyPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyPatientButtonActionPerformed(evt);
            }
        });
        patientInfoPanel.add(modifyPatientButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, -1, -1));

        deletePatientButton.setText("Supprimer");
        deletePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatientButtonActionPerformed(evt);
            }
        });
        patientInfoPanel.add(deletePatientButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, -1, -1));
        patientInfoPanel.add(lastNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 180, 30));
        patientInfoPanel.add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 180, 30));
        patientInfoPanel.add(ageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 180, 30));
        patientInfoPanel.add(genderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 180, 30));
        patientInfoPanel.add(cinLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, 230, 30));
        patientInfoPanel.add(birthDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 230, 20));
        patientInfoPanel.add(addressLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 230, 30));
        patientInfoPanel.add(cityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 230, 30));

        mainPanel.add(patientInfoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 790, 240));

        searchButton.setText("Rechercher");

        addPatientButton.setText("Ajouter un patient");
        addPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPatientButton)
                .addContainerGap(213, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(addPatientButton)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(searchPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 700, 40));

        add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        profilePanel.setPreferredSize(new java.awt.Dimension(889, 550));
        profilePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informations du Patient", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientName.setText("Mohamed Ell Alami");
        jPanel1.add(patientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        patientSex.setText("M");
        jPanel1.add(patientSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, -1, -1));

        patientAge.setText("23");
        jPanel1.add(patientAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));

        jLabel10.setText("ans");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, -1, -1));

        jLabel11.setText("Consultations");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jLabel12.setText("Informations ");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

        jLabel13.setText("Diagnostics");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 140, -1));

        jLabel14.setText("Allergies");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, -1, -1));

        visitsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Dtae", "Type"
            }
        ));
        jScrollPane2.setViewportView(visitsTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 290, 126));

        infoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "proprieté ", "valeur", "Date"
            }
        ));
        jScrollPane3.setViewportView(infoTable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 290, 128));

        diagnosticsListe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Diagnostics"
            }
        ));
        jScrollPane4.setViewportView(diagnosticsListe);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 290, 130));

        allergiesListe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Allergies"
            }
        ));
        jScrollPane5.setViewportView(allergiesListe);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 290, 128));

        profilePanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 710, 440));

        addRemindButton.setText("Ajouter Un rappel");
        addRemindButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRemindButtonActionPerformed(evt);
            }
        });
        profilePanel.add(addRemindButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, 170, -1));

        add(profilePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        createUpdatePatientPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Nom");

        jLabel15.setText("Prenom");

        jLabel16.setText("Date Naissance");

        jLabel17.setText("Téléphone");

        jLabel18.setText("Adresse");

        jLabel19.setText("Ville");

        jLabel20.setText("Sexe");

        jLabel21.setText("CIN");

        monthChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        dayChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        addressTextFiled.setColumns(20);
        addressTextFiled.setRows(3);
        jScrollPane6.setViewportView(addressTextFiled);

        sexChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monthChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dayChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 42, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(FirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(cinText, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(sexChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 42, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(283, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 22, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel1))
                        .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel15))
                        .addComponent(FirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel21))
                        .addComponent(cinText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jLabel16)
                    .addGap(25, 25, 25)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel17)
                        .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel18))
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(24, 24, 24)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel19))
                        .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(6, 6, 6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(jLabel20))
                        .addComponent(sexChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 69, Short.MAX_VALUE)))
        );

        createUpdatePatientPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 420, 470));

        addOrUpdateButton.setText("Ajouter");
        addOrUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrUpdateButtonActionPerformed(evt);
            }
        });
        createUpdatePatientPanel.add(addOrUpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, 100, -1));

        add(createUpdatePatientPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void displayProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayProfileButtonActionPerformed
        String num = null;
        try {
            TableModel model = (TableModel)patientsTable.getModel();
            num = String.valueOf(model.getValueAt(patientsTable.getSelectedRow(), 0));
        } catch(Exception e) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un patient", "Erreur", JOptionPane.ERROR_MESSAGE);        
        }
        
        if(num != null) {
            try { 
                
                Patient currentPatient = DAOFactory.getPatientDAO().find(num);
                loadProfilePanel(currentPatient);
                mainPanel.setVisible(false);
                profilePanel.setVisible(true);
                //new PatientFrame(currentPatient).setVisible(true);
        
            } catch (Exception e) {
                System.out.println("Erreur lors de l'affichage");
            }
        }
    }//GEN-LAST:event_displayProfileButtonActionPerformed

    private void deletePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatientButtonActionPerformed
        String num = null;
        try {
            TableModel model = (TableModel)patientsTable.getModel();
            num = String.valueOf(model.getValueAt(patientsTable.getSelectedRow(), 0));
         } catch(Exception e) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un patient", "Erreur", JOptionPane.ERROR_MESSAGE);        
        }
        if(num != null) {
            int val = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce patient?", "Validation", JOptionPane.OK_CANCEL_OPTION);
            if(val == 0) {
                Patient currentPatient = DAOFactory.getPatientDAO().find(num);
                DAOFactory.getPatientDAO().delete(currentPatient);
                        
                SwingUtilities.updateComponentTreeUI(this);
                this.invalidate();
                this.validate();
                this.repaint();

                refreshTable(DAOFactory.getPatientDAO().all());
            }
        }
    }//GEN-LAST:event_deletePatientButtonActionPerformed

    private void modifyPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyPatientButtonActionPerformed
        String num = null;
        try {
            TableModel model = (TableModel)patientsTable.getModel();
            num = String.valueOf(model.getValueAt(patientsTable.getSelectedRow(), 0));
        } catch(Exception e) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un patient", "Erreur", JOptionPane.ERROR_MESSAGE);        
        }
        
        if(num != null) {
            try {
                FirstNameText.setText(selectedPatient.getLastName());
                lastNameText.setText(selectedPatient.getName());
                addressTextFiled.setText(selectedPatient.getAddress());
                cinText.setText(selectedPatient.getCin());
                cityTextField.setText(selectedPatient.getCity());
                phoneTextField.setText(selectedPatient.getTelephone());
                sexChoice.setSelectedItem(selectedPatient.getSexe());
                
                String yearMonthDay[]=selectedPatient.getBirthDate().toString().split("-");
        
                yearTextField.setText(yearMonthDay[0]);
                monthChoice.setSelectedItem(yearMonthDay[1]);
                dayChoice.setSelectedItem(yearMonthDay[2]);
                
                createUpdatePatientPanel.setVisible(true);
                addOrUpdateButton.setText("Modifier");
                mainPanel.setVisible(false);
                profilePanel.setVisible(false);
        } catch (Exception e) {
            System.out.println("Erreur lors de l'ajout");
        }
        }
    }//GEN-LAST:event_modifyPatientButtonActionPerformed

    private void addPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButtonActionPerformed
        try {
            createUpdatePatientPanel.setVisible(true);
            mainPanel.setVisible(false);
            profilePanel.setVisible(false);
        } catch (Exception e) {
            System.out.println("Erreur lors de l'ajout");
        }
    }//GEN-LAST:event_addPatientButtonActionPerformed

    private void addRemindButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRemindButtonActionPerformed

        new ReminderFrame(patient).setVisible(true);

    }//GEN-LAST:event_addRemindButtonActionPerformed

    private void addOrUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrUpdateButtonActionPerformed
        
        
        
        if (addOrUpdateButton.getText().equalsIgnoreCase("Ajouter")) {
            Patient patientCreated = new Patient();
       
            patientCreated.setName(FirstNameText.getText());
            patientCreated.setLastName(lastNameText.getText());
            patientCreated.setAddress(addressTextFiled.getText());
            patientCreated.setCin(cinText.getText());
            patientCreated.setCity(cityTextField.getText());
            patientCreated.setSexe(sexChoice.getSelectedItem().toString());
            patientCreated.setTelephone(phoneTextField.getText());
            
            String sdate = yearTextField.getText() + "-" + monthChoice.getSelectedItem().toString() + "-"+dayChoice.getSelectedItem().toString();
            SimpleDateFormat spdf = new SimpleDateFormat("yyyy-MM-dd");
            
            java.util.Date resultDate = null; 
            
            try {
                resultDate = spdf.parse(sdate);
                
            } catch (ParseException ex) {
                Logger.getLogger(PatientPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            patientCreated.setBirthDate(new Date(resultDate.getTime()));
            
            if (DAOFactory.getPatientDAO().create(patientCreated)) {
                JOptionPane.showMessageDialog(this, "Patient crée", "Info", JOptionPane.INFORMATION_MESSAGE);
                createUpdatePatientPanel.setVisible(false);
                profilePanel.setVisible(false);

                try {
                    patientsTable.setModel(TableModelBuilder.buildPatientTableModel(DAOFactory.getPatientDAO().all()));
                } catch(Exception e) {
                    SwingUtilities.updateComponentTreeUI(this);
                    this.invalidate();
                    this.validate();
                    this.repaint();
                    patientsTable.repaint();
                }
                        
                mainPanel.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Erreur lors de la création", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        
        if (addOrUpdateButton.getText().equalsIgnoreCase("Modifier")) {
            Patient newPatient = new Patient();
            
            if (selectedPatient != null) {
                
                newPatient.setName(FirstNameText.getText());
                newPatient.setLastName(lastNameText.getText());
                newPatient.setAddress(addressTextFiled.getText());
                newPatient.setCin(cinText.getText());
                newPatient.setCity(cityTextField.getText());
                newPatient.setSexe(sexChoice.getSelectedItem().toString());
                newPatient.setTelephone(phoneTextField.getText());
                newPatient.setPatientId(selectedPatient.getPatientId());
                
                String sdate = yearTextField.getText() + "-" + monthChoice.getSelectedItem().toString() + "-"+dayChoice.getSelectedItem().toString();
                SimpleDateFormat spdf = new SimpleDateFormat("yyyy-MM-dd");

                java.util.Date resultDate = null; 

                try {
                    resultDate = spdf.parse(sdate);
                } catch (ParseException ex) {
                    Logger.getLogger(PatientPanel.class.getName()).log(Level.SEVERE, null, ex);
                }


                newPatient.setBirthDate(new Date(resultDate.getTime()));
                if (DAOFactory.getPatientDAO().update(newPatient)) {
                    JOptionPane.showMessageDialog(this, "Patient mis a jour.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    createUpdatePatientPanel.setVisible(false);
                    profilePanel.setVisible(false);
                    
                    try {
                        patientsTable.setModel(TableModelBuilder.buildPatientTableModel(DAOFactory.getPatientDAO().all()));
                    } catch(Exception e) {
                        SwingUtilities.updateComponentTreeUI(this);
                        this.invalidate();
                        this.validate();
                        this.repaint();
                        patientsTable.repaint();
                    }
                    
                    mainPanel.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Erreur lors de la mise à jour", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
                
            } else {
                JOptionPane.showMessageDialog(this, "Selectionner d'abord un patient", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
           
        
            
            
            
         
            
            
        }
        

           
        

    }//GEN-LAST:event_addOrUpdateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FirstNameText;
    private javax.swing.JButton addOrUpdateButton;
    private javax.swing.JButton addPatientButton;
    private javax.swing.JButton addRemindButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextArea addressTextFiled;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTable allergiesListe;
    private javax.swing.JLabel birthDateLabel;
    private javax.swing.JLabel cinLabel;
    private javax.swing.JTextField cinText;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JPanel createUpdatePatientPanel;
    private javax.swing.JComboBox dayChoice;
    private javax.swing.JButton deletePatientButton;
    private javax.swing.JTable diagnosticsListe;
    private javax.swing.JButton displayProfileButton;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTable infoTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton modifyPatientButton;
    private javax.swing.JComboBox monthChoice;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel patientAge;
    private javax.swing.JPanel patientInfoPanel;
    private javax.swing.JLabel patientName;
    private javax.swing.JLabel patientNumberLabel;
    private javax.swing.JLabel patientSex;
    private javax.swing.JPanel patientsListPanel;
    private javax.swing.JTable patientsTable;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JPanel profilePanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JComboBox sexChoice;
    private javax.swing.JTable visitsTable;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent event) {
        if (event.getSource() == patientsTable.getSelectionModel() && event.getValueIsAdjusting()) {
            
            TableModel model = (TableModel)patientsTable.getModel();
            String num = String.valueOf(model.getValueAt(patientsTable.getSelectedRow(), 0));
           
            Patient patientSelected = DAOFactory.getPatientDAO().find(num);
            patientSelected.setPatientId(Integer.parseInt(num));
            this.selectedPatient = patientSelected;
           
            
            
            patientNumberLabel.setText("Patient N˚ " + num);
            lastNameLabel.setText(patientSelected.getLastName());
            nameLabel.setText(patientSelected.getName());
            
            String dob = String.valueOf(patientSelected.getBirthDate());
            int yearDOB = Integer.parseInt(dob.substring(0, 4));
            
            int thisYear = Calendar.getInstance().get(Calendar.YEAR);
            
            ageLabel.setText(String.valueOf(thisYear-yearDOB));
            genderLabel.setText(patientSelected.getSexe());
            birthDateLabel.setText(dob);
            cinLabel.setText(patientSelected.getCin());
            addressLabel.setText(patientSelected.getAddress());
            cityLabel.setText(patientSelected.getCity());
        }
    }
}
